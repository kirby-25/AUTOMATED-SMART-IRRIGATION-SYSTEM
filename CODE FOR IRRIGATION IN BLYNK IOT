#include <LiquidCrystal_I2C.h>
#define BLYNK_PRINT Serial
#include <ESP8266WiFi.h>
#include <BlynkSimpleEsp8266.h>
#include <DHT.h>
LiquidCrystal_I2C lcd =LiquidCrystal_I2C(0x27, 16, 2);

char auth[] = "eI3N9YGboD8AwSynLxIS5ME8mxoTc3bC";  //Enter your Blynk Auth token
char ssid[] = "Loki";  //Enter your WIFI SSID
char pass[] = "akash@20";  //Enter your WIFI Password

DHT dht(D4, DHT11);//(DHT sensor pin,sensor type)  D4 DHT11 Temperature Sensor
BlynkTimer timer;

#define soil A0     //A0 Soil Moisture Sensor
#define PIR D5      //D5 PIR Motion Sensor
int PIR_ToggleValue;
#define solo D8

void checkPhysicalButton();
int relay1State = LOW;
int pushButton1State = HIGH;

#define RELAY_PIN_1       D3   //D3 Relay
#define PUSH_BUTTON_1     D7   //D7 Button

#define VPIN_BUTTON_1    V12 

double T, P;
//char status;
int status=HIGH;

 BLYNK_WRITE(V6)
{
 PIR_ToggleValue = param.asInt();  
}


BLYNK_CONNECTED() {
  // Request the latest state from the server
  Blynk.syncVirtual(VPIN_BUTTON_1);
}

BLYNK_WRITE(VPIN_BUTTON_1) {
   status= param.asInt();
  digitalWrite(RELAY_PIN_1,status);
}



void setup() {
  Serial.begin(9600);
  lcd.begin(16,2);
  lcd.init();
  lcd.backlight();
  pinMode(PIR, INPUT);
  pinMode(RELAY_PIN_1, OUTPUT);
  pinMode(PUSH_BUTTON_1, INPUT_PULLUP);
  digitalWrite(RELAY_PIN_1, status);
  pinMode(solo,OUTPUT);
  digitalWrite(solo,HIGH);

  
  Blynk.begin(auth, ssid, pass, "blynk.cloud", 80);
  dht.begin();

  lcd.setCursor(0, 0);
  lcd.print("  Initializing  ");
  for (int a = 5; a <= 10; a++) {
    lcd.setCursor(a, 1);
    lcd.print(".");
    delay(500);
  }
  lcd.clear();
  lcd.setCursor(11, 1);
  lcd.print("W:OFF");

}

void PIRsensor() {
  bool value = digitalRead(PIR);
  if (value) {
    Blynk.logEvent("pirmotion","WARNNG! Motion Detected!"); //Enter your Event Name
    WidgetLED LED(V5);
    LED.on();
  } else {
    WidgetLED LED(V5);
    LED.off();
  }  
  }

void loop() {
  // dht 11 values
  float h = dht.readHumidity();
  float t = dht.readTemperature();
  if (isnan(h) || isnan(t)) {
    Serial.println("Failed to read from DHT sensor!");
  }
  Blynk.virtualWrite(V0, t);
  Blynk.virtualWrite(V1, h);

  lcd.setCursor(0, 0);
  lcd.print("T:");
  lcd.print(t);

  lcd.setCursor(8, 0);
  lcd.print("H:");
  lcd.print(h);

 //soil moisture
  int value = analogRead(soil);
  value = map(value, 0, 1024, 0, 100);
  value = (value - 100) * -1;

  Blynk.virtualWrite(V3, value);
  lcd.setCursor(0, 1);
  lcd.print("S:");
  lcd.print(value);
  lcd.print(" ");


//switch
Serial.println(digitalRead(PUSH_BUTTON_1));
Serial.print("status");
Serial.println(status);
if(status){
  digitalWrite(solo,LOW);
     
}else{
  digitalWrite(solo,HIGH);
}
Serial.print("solo");
Serial.println(digitalRead(solo));

if(digitalRead(PUSH_BUTTON_1)==HIGH){
  status=!status;
  
  digitalWrite(RELAY_PIN_1,status);
  Blynk.virtualWrite(VPIN_BUTTON_1, status);
}
 while(digitalRead(PUSH_BUTTON_1 )==true);
    delay(50);


if (PIR_ToggleValue == 1)
    {
    lcd.setCursor(5, 1);
    lcd.print("M:ON ");
      PIRsensor();
      }
     else
     {
    lcd.setCursor(5, 1);
    lcd.print("M:OFF");
    WidgetLED LED(V5);
    LED.off();
    }

if (status  == HIGH)
{
  lcd.setCursor(11, 1);
  lcd.print("W:ON ");
  }
  else if (status == LOW)
  {
    lcd.setCursor(11, 1);
    lcd.print("W:OFF");
    }
     
//if(status){
//  digitalWrite(solo,LOW);
//     
//}else{
//  digitalWrite(solo,HIGH);
//}
//Serial.print("solo");
//Serial.println(digitalRead(solo));
  Blynk.run();//Run the Blynk library
  timer.run();//Run the Blynk timer

}
